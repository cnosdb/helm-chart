apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cnosdb.fullname" . }}
  labels:
    app.kubernetes.io/component: cnosdb-data
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: cnosdb-data
  serviceName: "{{ include "cnosdb.fullname" . }}"
  replicas: {{.Values.config.data.replicas | default 2}}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app.kubernetes.io/component: cnosdb-data
      {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
      {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      serviceAccountName: {{ include "cnosdb.serviceAccountName" . }}
      containers:
        - name: {{ include "cnosdb.fullname" . }}
          image: "{{ .Values.image.data.repository }}:{{ .Values.image.data.tag }}"
          imagePullPolicy: {{ .Values.image.data.pullPolicy | quote }}
        {{- if .Values.resources }}
          resources:
            requests:
              memory: "{{ .Values.resource.data.memory |  default 1 }}Gi"
              cpu: "{{ .Values.resource.data.cpu |  default 1 }}"
        {{- end }}
          ports:
            - name: api
              containerPort: {{ .Values.config.http.bind_address | default 8086 }}
        {{- if .Values.config.graphite.enabled }}
            - name: graphite
              containerPort: {{ .Values.config.graphite.bind_address | default 2003 }}
        {{- end }}
        {{- if .Values.config.collectd.enabled }}
            - name: collectd
              containerPort: {{ .Values.config.collectd.bind_address |  default 25826 }}
              protocol: UDP
        {{- end }}
        {{- if .Values.config.udp.enabled }}
            - name: udp
              containerPort: {{ .Values.config.udp.bind_address | default 8089 }}
              protocol: UDP
        {{- end }}
        {{- if .Values.config.opentsdb.enabled }}
            - name: opentsdb
              containerPort: {{ .Values.config.opentsdb.bind_address |  default 4242 }}
        {{- end }}
            - name: rpc
              containerPort: {{ .Values.config.rpc.bind_address | default 8088 }}
            - name: meta
              containerPort: {{ .Values.config.meta.bind_address | default 8091 }}
        {{- if or .Values.env .Values.setDefaultUser.enabled }}
          env:
            - name : POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CNOSDB_HOSTNAME
              value: "$(POD_NAME).{{ include "cnosdb.fullname" . }}"
        {{- if .Values.env }}
{{ toYaml .Values.env | indent 10 }}
        {{- end }}
        {{- if .Values.setDefaultUser.enabled }}
            - name: CNOSDB_ADMIN_USER
              valueFrom:
                secretKeyRef:
                {{- if .Values.setDefaultUser.user.existingSecret }}
                  name: {{ .Values.setDefaultUser.user.existingSecret -}}
                {{ else }}
                  name: {{ include "cnosdb.fullname" . }}-auth
                {{- end }}
                  key: cnosdb-user
            - name: CNOSDB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.setDefaultUser.user.existingSecret }}
                  name: {{ .Values.setDefaultUser.user.existingSecret -}}
                {{ else }}
                  name: {{ include "cnosdb.fullname" . }}-auth
                {{- end }}
                  key: cnosdb-password
        {{- end }}
        {{- end }}
        {{- if .Values.envFromSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret }}
        {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path | default "/ping" }}
              port: api
              scheme: {{ .Values.livenessProbe.scheme | default "HTTP" }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 30 }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 5 }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path | default "/ping" }}
              port: api
              scheme: {{ .Values.readinessProbe.scheme | default "HTTP" }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 5 }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 1 }}
        {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.path | default "/ping" }}
              port: api
              scheme: {{ .Values.startupProbe.scheme | default "HTTP" }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold | default 6 }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds | default 5 }}
        {{- end }}
          volumeMounts:
            - name: {{ include "cnosdb.fullname" . }}-data
              mountPath: /var/lib/cnosdb
            - name: config
              mountPath: /etc/cnosdb
        {{- if .Values.initScripts.enabled }}
            - name: init
              mountPath: /docker-entrypoint-initdb.d
        {{- end }}
        {{- if .Values.mountPoints }}
{{ toYaml .Values.mountPoints | indent 8 }}
        {{- end }}
      {{- if .Values.extraContainers }}
{{ toYaml .Values.extraContainers | indent 6}}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "cnosdb.fullname" . }}
      {{- if .Values.initScripts.enabled }}
        - name: init
          configMap:
            name: {{ include "cnosdb.fullname" . }}-init
      {{- end }}
      {{- if (not .Values.persistence.enabled ) }}
        - name: {{ include "cnosdb.fullname" . }}-data
          emptyDir: { }
      {{- end }}
      {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 6 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "cnosdb.fullname" . }}-data
        annotations:
        {{- range $key, $value := .Values.persistence.annotations }}
          {{ $key }}: "{{ $value }}"
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote}}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
