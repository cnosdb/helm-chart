{{- if or (eq .Values.architecture "separation") (eq .Values.architecture "bundle") }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cnosdb.fullname" . -}}-meta
  labels:
    cnosdb.com/app: cnosdb
    cnosdb.com/role: meta
    cnosdb.com/cluster: {{ include "cnosdb.fullname" . }}
    {{- include "cnosdb.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      cnosdb.com/app: cnosdb
      cnosdb.com/role: meta
      cnosdb.com/cluster: {{ include "cnosdb.fullname" . }}
  serviceName: "{{ include "cnosdb.fullname" . -}}-meta"
  podManagementPolicy: Parallel
  replicas: {{ .Values.meta.replicaCount }}
  template:
    metadata:
      labels:
        cnosdb.com/app: cnosdb
        cnosdb.com/role: meta
        cnosdb.com/cluster: {{ include "cnosdb.fullname" . }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.meta.terminationGracePeriodSeconds }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.meta.affinity }}
      affinity: {{- include "cnosdb.toYaml" (dict "value" .Values.meta.affinity) | nindent 8 }}
      {{- end }}
      {{- if .Values.meta.nodeSelector }}
      nodeSelector: {{- include "cnosdb.toYaml" (dict "value" .Values.meta.nodeSelector) | nindent 8 }}
      {{- end }}
      {{- if .Values.meta.tolerations }}
      tolerations: {{- include "cnosdb.toYaml" (dict "value" .Values.meta.tolerations) | nindent 8 }}
      {{- end }}
      initContainers:
        - name: fetch-conf
          image: "{{ .Values.image.cnosdbMeta.repository }}:{{ .Values.image.cnosdbMeta.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["cp","/etc/cnosdb/cnosdb-meta.conf","/etc/initconf/default.conf"]
          volumeMounts:
            - name: config
              mountPath: "/etc/initconf"
        - name: init-conf
          image: "{{ .Values.image.clusterConfTool.repository }}:{{ .Values.image.clusterConfTool.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CNOSDB_ROLE
              value: meta
            - name: CNOSDB_VERSION
              value: {{ .Values.image.cnosdbMeta.tag | default .Chart.AppVersion }}
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: META_SVC_NAME
              value: {{ include "cnosdb.fullname" . -}}-meta
            - name: CLUSTER_INSTANCE_NAME
              value: {{ include "cnosdb.fullname" . }}
            - name: CONF_FROM_USER
              value: '{{ include "cnosdb.extraConfig" (dict "value" .Values "conf" .Values.meta.extraConf) }}'
          args: ["-type", "conf"]
          volumeMounts:
            - name: config
              mountPath: "/etc/initconf"
      containers:
        - name: cnosdb-meta
          image: "{{ .Values.image.cnosdbMeta.repository }}:{{ .Values.image.cnosdbMeta.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - |
              cnosdb-meta --config /etc/cnosdb/cnosdb-meta.conf
          ports:
            - containerPort: 8901
              name: meta
          {{- if .Values.meta.resources }}
          resources: {{- toYaml .Values.meta.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: "/etc/cnosdb"
            - name: meta-data
              mountPath: "/var/lib/cnosdb"
            {{- if not (empty .Values.license) }}
            - name: license
              mountPath: "{{ .Values.licensePath | trimSuffix "/" }}/license.json"
              subPath: "license.json"
            {{- end }}
      volumes:
        - name: config
          emptyDir: {}
      {{- if not (empty .Values.license) }}
        - configMap:
            items:
            - key: license
              path: license.json
            name: {{ include "cnosdb.fullname" . -}}-license
          name: license
      {{- end }}
  {{- if not .Values.meta.persistence.enabled }}
        - name: meta-data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: meta-data
      spec:
        accessModes:
        {{- range .Values.meta.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        storageClassName: {{ .Values.meta.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.meta.persistence.size | quote }}
  {{- end }}
{{- end }}