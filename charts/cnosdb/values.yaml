nameOverride: ""
fullnameOverride: ""
image:
  cnosdbMeta:
    repository: cnosdb/cnosdb-meta
    tag: community-latest
  cnosdb:
    repository: cnosdb/cnosdb
    tag: community-latest
  clusterConfTool:
    repository: registry.cn-hangzhou.aliyuncs.com/cnosdb/cnosdb-init-config
    tag: latest
  pullPolicy: Always
  pullSecrets: []
license: ""
licensePath: "/etc/cnosdb"
# Allowed values: `singleton` `bundle` or `separation`
architecture: separation
meta:
  replicaCount: 3
  terminationGracePeriodSeconds: 10
  # 这里可以自定义配置去覆盖默认配置
  extraConf: {}
  resources:
    limits: {}
    requests: {}
  affinity: {}
  nodeSelector: {}
  tolerations: []
  service:
    type: ClusterIP
    port: 8901
    nodePort: ""
    clusterIP: ""
    externalTrafficPolicy: Cluster
    annotations: {}
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
  persistence:
    enabled: false
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 10Gi
tskv:
  replicaCount: 2
  terminationGracePeriodSeconds: 10
  extraConf: {}
  resources:
    limits: {}
    requests: {}
  affinity: {}
  nodeSelector: {}
  tolerations: []
  service:
    type: ClusterIP
    ports:
      http: 8902
      grpc: 8903
      flight: 8904
      tcp: 8905
      vector: 8906
    nodePorts:
      http: ""
      grpc: ""
      flight: ""
      tcp: ""
      vector: ""
    clusterIP: ""
    externalTrafficPolicy: Cluster
    annotations: {}
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
  persistence:
    enabled: false
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 10Gi
query:
  replicaCount: 2
  extraConf: {}
  resources:
    limits: {}
    requests: {}
  affinity: {}
  nodeSelector: {}
  tolerations: []
  service:
    type: ClusterIP
    ports:
      http: 8902
      grpc: 8903
      flight: 8904
      tcp: 8905
      vector: 8906
    nodePorts:
      http: ""
      grpc: ""
      flight: ""
      tcp: ""
      vector: ""
    clusterIP: ""
    externalTrafficPolicy: Cluster
    annotations: {}
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
queryTskv:
  replicaCount: 2
  terminationGracePeriodSeconds: 10
  extraConf: {}
  resources:
    limits: {}
    requests: {}
  affinity: {}
  nodeSelector: {}
  tolerations: []
  service:
    type: ClusterIP
    ports:
      http: 8902
      grpc: 8903
      flight: 8904
      tcp: 8905
      vector: 8906
    nodePorts:
      http: ""
      grpc: ""
      flight: ""
      tcp: ""
      vector: ""
    clusterIP: ""
    externalTrafficPolicy: Cluster
    annotations: {}
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
  persistence:
    enabled: false
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 10Gi
singleton:
  extraConf: {}
  resources:
    limits: {}
    requests: {}
  affinity: {}
  nodeSelector: {}
  tolerations: []
  service:
    type: ClusterIP
    ports:
      meta: 8901
      http: 8902
      grpc: 8903
      flight: 8904
      tcp: 8905
      vector: 8906
    nodePorts:
      meta: ""
      http: ""
      grpc: ""
      flight: ""
      tcp: ""
      vector: ""
    clusterIP: ""
    externalTrafficPolicy: Cluster
    annotations: {}
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
  persistence:
    enabled: false
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    existingClaim: ""
